<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.demo.dao.OrderDao">

    <resultMap id="BaseResultMap" type="com.test.demo.entity.Order">
        <!--@Table order-->
        <result property="orderId" column="order_id" jdbcType="INTEGER"/>
        <result property="textbookId" column="textbook_id" jdbcType="INTEGER"/>
        <result property="textbookName" column="textbook_name" jdbcType="VARCHAR"/>
        <result property="textbookAuthor" column="textbook_author" jdbcType="VARCHAR"/>
        <result property="amount" column="amount" jdbcType="INTEGER"/>
        <result property="orderTime" column="order_time" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="orderChannel" column="order_channel" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          order_id, textbook_id, textbook_name, textbook_author, amount, order_time, price, order_channel
        from order
        where order_id = #{orderId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          order_id, textbook_id, textbook_name, textbook_author, amount, order_time, price, order_channel
        from order
        <where>
            <if test="orderId != null">
                and order_id = #{orderId}
            </if>
            <if test="textbookId != null">
                and textbook_id = #{textbookId}
            </if>
            <if test="textbookName != null and textbookName != ''">
                and textbook_name = #{textbookName}
            </if>
            <if test="textbookAuthor != null and textbookAuthor != ''">
                and textbook_author = #{textbookAuthor}
            </if>
            <if test="amount != null">
                and amount = #{amount}
            </if>
            <if test="orderTime != null and orderTime != ''">
                and order_time = #{orderTime}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="orderChannel != null and orderChannel != ''">
                and order_channel = #{orderChannel}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from order
        <where>
            <if test="orderId != null">
                and order_id = #{orderId}
            </if>
            <if test="textbookId != null">
                and textbook_id = #{textbookId}
            </if>
            <if test="textbookName != null and textbookName != ''">
                and textbook_name = #{textbookName}
            </if>
            <if test="textbookAuthor != null and textbookAuthor != ''">
                and textbook_author = #{textbookAuthor}
            </if>
            <if test="amount != null">
                and amount = #{amount}
            </if>
            <if test="orderTime != null and orderTime != ''">
                and order_time = #{orderTime}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="orderChannel != null and orderChannel != ''">
                and order_channel = #{orderChannel}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="orderId" useGeneratedKeys="true">
        insert into order(textbook_id, textbook_name, textbook_author, amount, order_time, price, order_channel)
        values (#{textbookId}, #{textbookName}, #{textbookAuthor}, #{amount}, #{orderTime}, #{price}, #{orderChannel})
    </insert>

    <insert id="insertBatch" keyProperty="orderId" useGeneratedKeys="true">
        insert into order(textbook_id, textbook_name, textbook_author, amount, order_time, price, order_channel)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.textbookId}, #{entity.textbookName}, #{entity.textbookAuthor}, #{entity.amount}, #{entity.orderTime}, #{entity.price}, #{entity.orderChannel})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="orderId" useGeneratedKeys="true">
        insert into order(textbook_id, textbook_name, textbook_author, amount, order_time, price, order_channel)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.textbookId}, #{entity.textbookName}, #{entity.textbookAuthor}, #{entity.amount}, #{entity.orderTime}, #{entity.price}, #{entity.orderChannel})
        </foreach>
        on duplicate key update
        textbook_id = values(textbook_id),
        textbook_name = values(textbook_name),
        textbook_author = values(textbook_author),
        amount = values(amount),
        order_time = values(order_time),
        price = values(price),
        order_channel = values(order_channel)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update order
        <set>
            <if test="textbookId != null">
                textbook_id = #{textbookId},
            </if>
            <if test="textbookName != null and textbookName != ''">
                textbook_name = #{textbookName},
            </if>
            <if test="textbookAuthor != null and textbookAuthor != ''">
                textbook_author = #{textbookAuthor},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="orderTime != null and orderTime != ''">
                order_time = #{orderTime},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="orderChannel != null and orderChannel != ''">
                order_channel = #{orderChannel},
            </if>
        </set>
        where order_id = #{orderId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from order where order_id = #{orderId}
    </delete>

</mapper>

